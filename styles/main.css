@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
:where(p:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  width: auto;
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "ABeeZee";
  src: url("../fonts/ABeeZee-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "AbhayaLibre";
  src: url("../fonts/AbhayaLibre-ExtraBold.woff2") format("woff2");
  font-weight: 800;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "AbhayaLibre";
  src: url("../fonts/AbhayaLibre-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Comfortaa";
  src: url("../fonts/Comfortaa-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Comfortaa";
  src: url("../fonts/Comfortaa-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Kurale";
  src: url("../fonts/Kurale-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-white: #FFFFFF;
  --color-dark: #000000;
  --color-pink: #D611C5;
  --color-orang: #FFAB58;
  --color-purple: #8B39E9;
  --color-blue: #8B39E9;
  --color-not-active-button: #1D202F;
  --color-background-main: #0D101C;
  --color-background-header-footer: #101322;
  --color-element: #151A32;
  --color-contact-button: #D4DF36;
  --color-linear-gradient-button: linear-gradient(to right, #6B1CDB, #962973);
  --color-accent-text: linear-gradient(to right, #D9FF00, #FF0004);
  --color-header-footer-shadow: #0E0E0E;
  --font-family-base: "ABeeZee", "sans-serif";
  --font-family-info: "Comfortaa", "sans-serif";
  --font-family-accant: "AbhayaLibre", "sans-serif";
  --container-width-main: 105rem;
  --container-padding-x-main: 3.125rem;
  --container-width-mobile: 47.99875rem;
  --container-padding-x-mobile: 1rem;
  --transition-duration: 0.2s;
  --border: 0.125rem solid var(--color-purple);
}
@media (width <= 90.06125rem) {
  :root {
    --container-width: 81.875rem;
  }
}

.container {
  max-width: calc(var(--container-width-main) + var(--container-padding-x-main) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x-main);
}
@media (width <= 47.99875rem) {
  .container {
    max-width: calc(var(--container-width-mobile) + var(--container-padding-x-mobile) * 2);
    margin-inline: auto;
    padding-inline: var(--container-padding-x-mobile);
  }
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(0.5rem, 0.298553719rem + 0.826446281vw, 1.125rem);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
  color: var(--color-white);
  background-color: var(--color-background-main);
}

main {
  flex-grow: 1;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  color: var(--color-white);
  font-weight: 400;
}

h1, .h1,
h2, .h2 {
  font-family: var(--font-family-info);
}

h1, .h1 {
  font-size: clamp(1.5rem, 0.694214876rem + 3.305785124vw, 4rem);
}

h2, .h2 {
  font-size: clamp(1.25rem, 0.6859504132rem + 2.3140495868vw, 3rem);
}

h4, .h4 {
  font-size: clamp(1.25rem, 1.1694214876rem + 0.3305785124vw, 1.5rem);
  font-family: var(--font-family-base);
}

h5, .h5 {
  font-size: clamp(1rem, 0.9597107438rem + 0.1652892562vw, 1.125rem);
  font-family: var(--font-family-base);
  opacity: 0.5;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-purple);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-purple);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-white);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

a[aria-label], button[aria-label] {
  position: relative;
}
a[aria-label]::before, button[aria-label]::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 2.75rem;
  height: 2.75rem;
  content: "";
}

.logo {
  max-width: clamp(7.375rem, 7.3347107438rem + 0.1652892562vw, 7.5rem);
}

.button {
  display: inline-flex;
  justify-content: center;
  padding: 0.625rem 0.5625rem;
  font-size: 1.25rem;
  color: var(--color-purple);
  white-space: nowrap;
  border: var(--border);
  border-radius: 0.75rem;
}
@media (width <= 90.06125rem) {
  .button {
    padding: 0.25rem 0.8125rem;
    font-size: 1.125rem;
    border-radius: 0.625rem;
  }
}
@media (any-hover: hover) {
  .button:hover {
    color: var(--color-contact-button);
    border-color: var(--color-contact-button);
  }
}
@media (any-hover: none) {
  .button:active {
    color: var(--color-contact-button);
    border-color: var(--color-contact-button);
  }
}
.button--accent {
  color: var(--color-purple);
}

.burger-button {
  width: 2.5rem;
  height: 2.5rem;
  display: inline-flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 0.53125rem 0.265625rem;
  color: var(--color-white);
  background-color: transparent;
  border: none;
}
@media (any-hover: hover) {
  .burger-button:hover {
    color: var(--color-purple);
  }
}
@media (any-hover: none) {
  .burger-button:active {
    color: var(--color-purple);
  }
}
.burger-button.is-active .burger-button__line:first-child {
  rotate: 45deg;
  transform-origin: 0;
  translate: 0.5em -0.1em;
}
.burger-button.is-active .burger-button__line:nth-child(2) {
  rotate: -45deg;
}
.burger-button.is-active .burger-button__line:last-child {
  width: 0;
}
.burger-button__line {
  width: 100%;
  height: 0.25rem;
  background-color: currentColor;
  border-radius: 1rem;
  transition-duration: var(--transition-duration);
}

.header {
  position: sticky;
  z-index: 100;
  top: 0;
  width: 100%;
  animation-name: scrolling-header;
  animation-fill-mode: both;
  animation-timeline: scroll();
  animation-range: 6.25rem 12.5rem;
}
@keyframes scrolling-header {
  to {
    box-shadow: 0 0 1rem var(--color-header-footer-shadow);
  }
}
.header__body {
  padding-block: 0.875rem;
  background-color: var(--color-background-header-footer);
}
@media (width <= 47.99875rem) {
  .header__body {
    background-color: var(--color-background-main);
  }
  .header__body .header__overlay.is-active {
    background-color: var(--color-background-header-footer);
  }
}
.header__body-inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 1rem;
  font-family: var(--font-family-info);
}
@media (width > 47.99875rem) {
  .header__overlay {
    display: contents;
  }
}
@media (width <= 47.99875rem) {
  .header__overlay {
    position: fixed;
    inset: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    row-gap: 3rem;
    padding: 1rem;
    transition-duration: var(--transition-duration);
  }
  .header__overlay:not(.is-active) {
    opacity: 0;
    visibility: hidden;
    display: none;
  }
}
@media (width <= 47.99875rem) {
  .header__menu {
    overflow-y: auto;
  }
}
.header__menu-list {
  display: flex;
  align-items: center;
  column-gap: 3.4375rem;
}
@media (width <= 90.06125rem) {
  .header__menu-list {
    column-gap: 1.5625rem;
  }
}
@media (width <= 47.99875rem) {
  .header__menu-list {
    flex-direction: column;
    row-gap: 1rem;
    font-size: 1.125rem;
  }
}
.header__menu-link {
  color: var(--color-white);
}
.header__menu-link.is-active {
  color: var(--color-accent-text);
}
@media (width <= 47.99875rem) {
  .header__contact-us-link {
    width: 100%;
    max-width: 18.75rem;
    align-self: center;
  }
}

.footer {
  background-color: var(--color-background-header-footer);
}
.footer__body {
  display: grid;
  grid-template-columns: 1fr 1fr 0.5fr;
  padding-block: clamp(1.375rem, 0.6095041322rem + 3.1404958678vw, 3.75rem);
  box-shadow: var(--color-header-footer-shadow);
  align-items: start;
  column-gap: clamp(0rem, -2.9814049587rem + 12.2314049587vw, 9.25rem);
}
@media (width <= 47.99875rem) {
  .footer__body {
    grid-template-columns: 1fr;
  }
}

/*# sourceMappingURL=main.css.map */
